name: Auto Release on Version Change

on:
  push:
    paths:
      - 'manifest.json'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Needed to compare to previous commit

      - name: Set up jq
        run: sudo apt-get install jq -y

      - name: Get current version from manifest.json
        id: current
        run: |
          CURRENT_VERSION=$(jq -r .version manifest.json)
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Get previous version from Git history
        id: previous
        run: |
          git show HEAD^:manifest.json > old_manifest.json
          PREV_VERSION=$(jq -r .version old_manifest.json)
          echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_OUTPUT

      - name: Check if version changed
        id: version_changed
        run: |
          if [ "${{ steps.current.outputs.CURRENT_VERSION }}" != "${{ steps.previous.outputs.PREV_VERSION }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT

      - name: Exit if version didn't change
        if: steps.version_changed.outputs.changed == 'false'
        run: echo "Version didn't change. Skipping release." && exit 0

      - name: Create ZIP Archive
        run: |
          mkdir -p dist
          zip -r "dist/Siesta-Launcher-v${{ steps.current.outputs.CURRENT_VERSION }}.zip" Siesta-Launcher

      - name: Get Commit Message
        id: get_commit
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.current.outputs.CURRENT_VERSION }}
          name: Release ${{ steps.current.outputs.CURRENT_VERSION }}
          body: ${{ steps.get_commit.outputs.COMMIT_MSG }}
          files: dist/Siesta-Launcher-v${{ steps.current.outputs.CURRENT_VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
